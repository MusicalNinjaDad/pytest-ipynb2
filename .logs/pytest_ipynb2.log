2025-03-07 07:59:06,468 - pytest_ipynb2.plugin - DEBUG - ==pytest_load_initial_conftests started==
2025-03-07 07:59:06,468 - pytest_ipynb2.plugin - DEBUG - Original command line args: ['--doctest-modules', '--doctest-mdcodeblocks', '--doctest-glob=*.pyi', '--doctest-glob=*.md', '--ignore=tests/assets', '-p', 'vscode_pytest', '--collect-only', '-vv', '--rootdir=/workspaces/pytest-ipynb2']
2025-03-07 07:59:06,468 - pytest_ipynb2.plugin - DEBUG - Updated command line args: ['--doctest-modules', '--doctest-mdcodeblocks', '--doctest-glob=*.pyi', '--doctest-glob=*.md', '--ignore=tests/assets', '-p', 'vscode_pytest', '--collect-only', '-vv', '--rootdir=/workspaces/pytest-ipynb2']
2025-03-07 07:59:06,475 - vscode_pytest - DEBUG - ==pytest_load_initial_conftests called with args: ['--doctest-modules', '--doctest-mdcodeblocks', '--doctest-glob=*.pyi', '--doctest-glob=*.md', '--ignore=tests/assets', '-p', 'vscode_pytest', '--collect-only', '-vv', '--rootdir=/workspaces/pytest-ipynb2']==
2025-03-07 07:59:06,475 - vscode_pytest - DEBUG - TEST_RUN_PIPE: /tmp/user/1000/python-test-discovery-3a2b05a383841d61ae4c
2025-03-07 07:59:06,486 - pytest_ipynb2.plugin - DEBUG - ==pytest_load_initial_conftests finished==
2025-03-07 07:59:06,486 - pytest_ipynb2.plugin - DEBUG - Config: <_pytest.config.Config object at 0x7fe94a49e660>
2025-03-07 07:59:06,496 - pytest_ipynb2.plugin - DEBUG - ==pytest_configure finished==
2025-03-07 07:59:06,496 - pytest_ipynb2.plugin - DEBUG - Plugin configured with pytest 0
2025-03-07 07:59:06,497 - pytest_ipynb2.plugin - DEBUG - Plugins activated: [(<module 'pytest_ipynb2.plugin' from '/workspaces/pytest-ipynb2/pytest_ipynb2/plugin.py'>, <pluggy._manager.DistFacade object at 0x7fe94a5317f0>), (<module 'pytest_doctest_mkdocstrings.doctest_mdcodeblocks' from '/workspaces/pytest-ipynb2/.venv/lib64/python3.13/site-packages/pytest_doctest_mkdocstrings/doctest_mdcodeblocks.py'>, <pluggy._manager.DistFacade object at 0x7fe94849f750>), (<module 'anyio.pytest_plugin' from '/workspaces/pytest-ipynb2/.venv/lib64/python3.13/site-packages/anyio/pytest_plugin.py'>, <pluggy._manager.DistFacade object at 0x7fe948457890>), (<module 'pytest_cov.plugin' from '/workspaces/pytest-ipynb2/.venv/lib64/python3.13/site-packages/pytest_cov/plugin.py'>, <pluggy._manager.DistFacade object at 0x7fe94836aea0>)]
2025-03-07 07:59:06,497 - pytest_ipynb2.plugin - DEBUG - Working directory: /workspaces/pytest-ipynb2
2025-03-07 07:59:06,612 - pytest_ipynb2.plugin - DEBUG - ==Collecting from cell: Cell4==
2025-03-07 07:59:06,614 - pytest_ipynb2.plugin - DEBUG - Module content: dict_keys(['__name__', '__doc__', '__package__', '__loader__', '__spec__', '__builtins__', 'x', 'y', 'adder', '@py_builtins', '@pytest_ar', 'test_adder', 'test_globals'])
2025-03-07 07:59:06,615 - pytest_ipynb2.plugin - DEBUG - Found: test_adder (<class '_pytest.python.Function'>)
2025-03-07 07:59:06,615 - pytest_ipynb2.plugin - DEBUG - Reblessed to: <class 'abc.Function'>
2025-03-07 07:59:06,615 - pytest_ipynb2.plugin - DEBUG - Found: test_globals (<class '_pytest.python.Function'>)
2025-03-07 07:59:06,615 - pytest_ipynb2.plugin - DEBUG - Reblessed to: <class 'abc.Function'>
2025-03-07 07:59:06,615 - pytest_ipynb2.plugin - DEBUG - ==Finished collecting from cell: Cell4==
2025-03-07 07:59:06,616 - pytest_ipynb2.plugin - DEBUG - ==Collecting from cell: Cell6==
2025-03-07 07:59:06,617 - pytest_ipynb2.plugin - DEBUG - Module content: dict_keys(['__name__', '__doc__', '__package__', '__loader__', '__spec__', '__builtins__', 'x', 'y', 'adder', 'another_function', '@py_builtins', '@pytest_ar', 'test_another_function', 'test_failure'])
2025-03-07 07:59:06,618 - pytest_ipynb2.plugin - DEBUG - Found: test_another_function (<class '_pytest.python.Function'>)
2025-03-07 07:59:06,618 - pytest_ipynb2.plugin - DEBUG - Reblessed to: <class 'abc.Function'>
2025-03-07 07:59:06,618 - pytest_ipynb2.plugin - DEBUG - Found: test_failure (<class '_pytest.python.Function'>)
2025-03-07 07:59:06,618 - pytest_ipynb2.plugin - DEBUG - Reblessed to: <class 'abc.Function'>
2025-03-07 07:59:06,618 - pytest_ipynb2.plugin - DEBUG - ==Finished collecting from cell: Cell6==
2025-03-07 07:59:06,647 - vscode_pytest - DEBUG - ==build_test_tree called==
2025-03-07 07:59:06,647 - vscode_pytest - DEBUG - ==get_node_path called for node: <Session  exitstatus=0 testsfailed=0 testscollected=20>==
2025-03-07 07:59:06,647 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2 for node <Session  exitstatus=0 testsfailed=0 testscollected=20>
2025-03-07 07:59:06,648 - vscode_pytest - DEBUG - node name, path, nodeid: test_adder, </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>, tests/notebook_2tests.ipynb[Cell4]::test_adder
2025-03-07 07:59:06,648 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_adder>==
2025-03-07 07:59:06,648 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_adder>==
2025-03-07 07:59:06,648 - vscode_pytest - DEBUG - get_node_path found node path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]> for node <Function test_adder>
2025-03-07 07:59:06,648 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/notebook_2tests.ipynb[Cell4]::test_adder==
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>; split_id: ['test_adder']
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - creating test node for test_adder, test_case location: ('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>', 0, 'Cell4::test_adder'), absolute_test_id: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_adder
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_adder>==
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - get_node_path found node path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]> for node <Function test_adder>
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - ==get_node_path called for node: <Cell 4>==
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - get_node_path found node path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]> for node <Cell 4>
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - ==create_file_node called with calculated_node_path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>==
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - node name, path, nodeid: test_globals, </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>, tests/notebook_2tests.ipynb[Cell4]::test_globals
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_globals>==
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_globals>==
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - get_node_path found node path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]> for node <Function test_globals>
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/notebook_2tests.ipynb[Cell4]::test_globals==
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>; split_id: ['test_globals']
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - creating test node for test_globals, test_case location: ('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>', 0, 'Cell4::test_globals'), absolute_test_id: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_globals
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_globals>==
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - get_node_path found node path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]> for node <Function test_globals>
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - ==get_node_path called for node: <Cell 4>==
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - get_node_path found node path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]> for node <Cell 4>
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - node name, path, nodeid: test_another_function, </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>, tests/notebook_2tests.ipynb[Cell6]::test_another_function
2025-03-07 07:59:06,649 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_another_function>==
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_another_function>==
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - get_node_path found node path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]> for node <Function test_another_function>
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/notebook_2tests.ipynb[Cell6]::test_another_function==
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>; split_id: ['test_another_function']
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - creating test node for test_another_function, test_case location: ('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>', 0, 'Cell6::test_another_function'), absolute_test_id: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_another_function
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_another_function>==
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - get_node_path found node path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]> for node <Function test_another_function>
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - ==get_node_path called for node: <Cell 6>==
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - get_node_path found node path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]> for node <Cell 6>
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - ==create_file_node called with calculated_node_path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>==
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - node name, path, nodeid: test_failure, </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>, tests/notebook_2tests.ipynb[Cell6]::test_failure
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_failure>==
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_failure>==
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - get_node_path found node path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]> for node <Function test_failure>
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/notebook_2tests.ipynb[Cell6]::test_failure==
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>; split_id: ['test_failure']
2025-03-07 07:59:06,650 - vscode_pytest - DEBUG - creating test node for test_failure, test_case location: ('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>', 0, 'Cell6::test_failure'), absolute_test_id: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_failure
2025-03-07 07:59:06,651 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_failure>==
2025-03-07 07:59:06,651 - vscode_pytest - DEBUG - get_node_path found node path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]> for node <Function test_failure>
2025-03-07 07:59:06,651 - vscode_pytest - DEBUG - ==get_node_path called for node: <Cell 6>==
2025-03-07 07:59:06,651 - vscode_pytest - DEBUG - get_node_path found node path: </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]> for node <Cell 6>
2025-03-07 07:59:06,651 - vscode_pytest - DEBUG - node name, path, nodeid: test_path[One File], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_path[One File]
2025-03-07 07:59:06,651 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_path[One File]>==
2025-03-07 07:59:06,651 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[One File]>==
2025-03-07 07:59:06,652 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[One File]>
2025-03-07 07:59:06,652 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_path[One File]==
2025-03-07 07:59:06,652 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_path[One File]']
2025-03-07 07:59:06,652 - vscode_pytest - DEBUG - creating test node for test_path[One File], test_case location: ('tests/test_fixtures.py', 83, 'test_path[One File]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[One File]
2025-03-07 07:59:06,652 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[One File]>==
2025-03-07 07:59:06,652 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[One File]>
2025-03-07 07:59:06,652 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[One File]>==
2025-03-07 07:59:06,652 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[One File]>
2025-03-07 07:59:06,652 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[One File]>==
2025-03-07 07:59:06,652 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[One File]>
2025-03-07 07:59:06,652 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,653 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,653 - vscode_pytest - DEBUG - ==create_file_node called with calculated_node_path: /workspaces/pytest-ipynb2/tests/test_fixtures.py==
2025-03-07 07:59:06,653 - vscode_pytest - DEBUG - node name, path, nodeid: test_path[Two files], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_path[Two files]
2025-03-07 07:59:06,653 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_path[Two files]>==
2025-03-07 07:59:06,653 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[Two files]>==
2025-03-07 07:59:06,654 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[Two files]>
2025-03-07 07:59:06,654 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_path[Two files]==
2025-03-07 07:59:06,654 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_path[Two files]']
2025-03-07 07:59:06,654 - vscode_pytest - DEBUG - creating test node for test_path[Two files], test_case location: ('tests/test_fixtures.py', 83, 'test_path[Two files]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Two files]
2025-03-07 07:59:06,654 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[Two files]>==
2025-03-07 07:59:06,654 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[Two files]>
2025-03-07 07:59:06,654 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[Two files]>==
2025-03-07 07:59:06,654 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[Two files]>
2025-03-07 07:59:06,655 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,656 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,656 - vscode_pytest - DEBUG - node name, path, nodeid: test_path[Copied Notebook], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_path[Copied Notebook]
2025-03-07 07:59:06,656 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_path[Copied Notebook]>==
2025-03-07 07:59:06,656 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[Copied Notebook]>==
2025-03-07 07:59:06,656 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[Copied Notebook]>
2025-03-07 07:59:06,657 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_path[Copied Notebook]==
2025-03-07 07:59:06,657 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_path[Copied Notebook]']
2025-03-07 07:59:06,657 - vscode_pytest - DEBUG - creating test node for test_path[Copied Notebook], test_case location: ('tests/test_fixtures.py', 83, 'test_path[Copied Notebook]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Copied Notebook]
2025-03-07 07:59:06,657 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[Copied Notebook]>==
2025-03-07 07:59:06,657 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[Copied Notebook]>
2025-03-07 07:59:06,657 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[Copied Notebook]>==
2025-03-07 07:59:06,657 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[Copied Notebook]>
2025-03-07 07:59:06,657 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,657 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,658 - vscode_pytest - DEBUG - node name, path, nodeid: test_path[Generated Notebook], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_path[Generated Notebook]
2025-03-07 07:59:06,658 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_path[Generated Notebook]>==
2025-03-07 07:59:06,658 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[Generated Notebook]>==
2025-03-07 07:59:06,658 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[Generated Notebook]>
2025-03-07 07:59:06,658 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_path[Generated Notebook]==
2025-03-07 07:59:06,658 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_path[Generated Notebook]']
2025-03-07 07:59:06,658 - vscode_pytest - DEBUG - creating test node for test_path[Generated Notebook], test_case location: ('tests/test_fixtures.py', 83, 'test_path[Generated Notebook]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook]
2025-03-07 07:59:06,659 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[Generated Notebook]>==
2025-03-07 07:59:06,659 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[Generated Notebook]>
2025-03-07 07:59:06,659 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[Generated Notebook]>==
2025-03-07 07:59:06,659 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[Generated Notebook]>
2025-03-07 07:59:06,659 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,659 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,659 - vscode_pytest - DEBUG - node name, path, nodeid: test_path[Generated Notebook 2 cells], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_path[Generated Notebook 2 cells]
2025-03-07 07:59:06,659 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_path[Generated Notebook 2 cells]>==
2025-03-07 07:59:06,659 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[Generated Notebook 2 cells]>==
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[Generated Notebook 2 cells]>
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_path[Generated Notebook 2 cells]==
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_path[Generated Notebook 2 cells]']
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - creating test node for test_path[Generated Notebook 2 cells], test_case location: ('tests/test_fixtures.py', 83, 'test_path[Generated Notebook 2 cells]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook 2 cells]
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[Generated Notebook 2 cells]>==
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[Generated Notebook 2 cells]>
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_path[Generated Notebook 2 cells]>==
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_path[Generated Notebook 2 cells]>
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - node name, path, nodeid: test_filesexist[One File], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_filesexist[One File]
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_filesexist[One File]>==
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[One File]>==
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[One File]>
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_filesexist[One File]==
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_filesexist[One File]']
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - creating test node for test_filesexist[One File], test_case location: ('tests/test_fixtures.py', 92, 'test_filesexist[One File]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[One File]
2025-03-07 07:59:06,660 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[One File]>==
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[One File]>
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[One File]>==
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[One File]>
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[One File]>==
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[One File]>
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - node name, path, nodeid: test_filesexist[Two files], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_filesexist[Two files]
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_filesexist[Two files]>==
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[Two files]>==
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[Two files]>
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_filesexist[Two files]==
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_filesexist[Two files]']
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - creating test node for test_filesexist[Two files], test_case location: ('tests/test_fixtures.py', 92, 'test_filesexist[Two files]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Two files]
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[Two files]>==
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[Two files]>
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[Two files]>==
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[Two files]>
2025-03-07 07:59:06,661 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - node name, path, nodeid: test_filesexist[Copied Notebook], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_filesexist[Copied Notebook]
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_filesexist[Copied Notebook]>==
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[Copied Notebook]>==
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[Copied Notebook]>
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_filesexist[Copied Notebook]==
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_filesexist[Copied Notebook]']
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - creating test node for test_filesexist[Copied Notebook], test_case location: ('tests/test_fixtures.py', 92, 'test_filesexist[Copied Notebook]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Copied Notebook]
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[Copied Notebook]>==
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[Copied Notebook]>
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[Copied Notebook]>==
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[Copied Notebook]>
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - node name, path, nodeid: test_filesexist[Generated Notebook], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_filesexist[Generated Notebook]
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_filesexist[Generated Notebook]>==
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[Generated Notebook]>==
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[Generated Notebook]>
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_filesexist[Generated Notebook]==
2025-03-07 07:59:06,662 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_filesexist[Generated Notebook]']
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - creating test node for test_filesexist[Generated Notebook], test_case location: ('tests/test_fixtures.py', 92, 'test_filesexist[Generated Notebook]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook]
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[Generated Notebook]>==
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[Generated Notebook]>
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[Generated Notebook]>==
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[Generated Notebook]>
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - node name, path, nodeid: test_filesexist[Generated Notebook 2 cells], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_filesexist[Generated Notebook 2 cells]
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_filesexist[Generated Notebook 2 cells]>==
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[Generated Notebook 2 cells]>==
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[Generated Notebook 2 cells]>
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_filesexist[Generated Notebook 2 cells]==
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_filesexist[Generated Notebook 2 cells]']
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - creating test node for test_filesexist[Generated Notebook 2 cells], test_case location: ('tests/test_fixtures.py', 92, 'test_filesexist[Generated Notebook 2 cells]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook 2 cells]
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[Generated Notebook 2 cells]>==
2025-03-07 07:59:06,663 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[Generated Notebook 2 cells]>
2025-03-07 07:59:06,664 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filesexist[Generated Notebook 2 cells]>==
2025-03-07 07:59:06,664 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filesexist[Generated Notebook 2 cells]>
2025-03-07 07:59:06,664 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,664 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,664 - vscode_pytest - DEBUG - node name, path, nodeid: test_filecontents[One File], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_filecontents[One File]
2025-03-07 07:59:06,664 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_filecontents[One File]>==
2025-03-07 07:59:06,664 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[One File]>==
2025-03-07 07:59:06,664 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[One File]>
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_filecontents[One File]==
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_filecontents[One File]']
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - creating test node for test_filecontents[One File], test_case location: ('tests/test_fixtures.py', 103, 'test_filecontents[One File]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[One File]
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[One File]>==
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[One File]>
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[One File]>==
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[One File]>
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[One File]>==
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[One File]>
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - node name, path, nodeid: test_filecontents[Two files], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_filecontents[Two files]
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_filecontents[Two files]>==
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[Two files]>==
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[Two files]>
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_filecontents[Two files]==
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_filecontents[Two files]']
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - creating test node for test_filecontents[Two files], test_case location: ('tests/test_fixtures.py', 103, 'test_filecontents[Two files]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Two files]
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[Two files]>==
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[Two files]>
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[Two files]>==
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[Two files]>
2025-03-07 07:59:06,665 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - node name, path, nodeid: test_filecontents[Copied Notebook], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_filecontents[Copied Notebook]
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_filecontents[Copied Notebook]>==
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[Copied Notebook]>==
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[Copied Notebook]>
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_filecontents[Copied Notebook]==
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_filecontents[Copied Notebook]']
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - creating test node for test_filecontents[Copied Notebook], test_case location: ('tests/test_fixtures.py', 103, 'test_filecontents[Copied Notebook]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Copied Notebook]
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[Copied Notebook]>==
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[Copied Notebook]>
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[Copied Notebook]>==
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[Copied Notebook]>
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - node name, path, nodeid: test_filecontents[Generated Notebook], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_filecontents[Generated Notebook]
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_filecontents[Generated Notebook]>==
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[Generated Notebook]>==
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[Generated Notebook]>
2025-03-07 07:59:06,666 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_filecontents[Generated Notebook]==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_filecontents[Generated Notebook]']
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - creating test node for test_filecontents[Generated Notebook], test_case location: ('tests/test_fixtures.py', 103, 'test_filecontents[Generated Notebook]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook]
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[Generated Notebook]>==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[Generated Notebook]>
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[Generated Notebook]>==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[Generated Notebook]>
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - node name, path, nodeid: test_filecontents[Generated Notebook 2 cells], /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_filecontents[Generated Notebook 2 cells]
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_filecontents[Generated Notebook 2 cells]>==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[Generated Notebook 2 cells]>==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[Generated Notebook 2 cells]>
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_filecontents[Generated Notebook 2 cells]==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_filecontents[Generated Notebook 2 cells]']
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - creating test node for test_filecontents[Generated Notebook 2 cells], test_case location: ('tests/test_fixtures.py', 103, 'test_filecontents[Generated Notebook 2 cells]'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook 2 cells]
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[Generated Notebook 2 cells]>==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[Generated Notebook 2 cells]>
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_filecontents[Generated Notebook 2 cells]>==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_filecontents[Generated Notebook 2 cells]>
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - node name, path, nodeid: test_hashable_spec, /workspaces/pytest-ipynb2/tests/test_fixtures.py, tests/test_fixtures.py::test_hashable_spec
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==create_test_node called with test_case: <Function test_hashable_spec>==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_hashable_spec>==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_hashable_spec>
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==get_absolute_test_id called with test_id: tests/test_fixtures.py::test_hashable_spec==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - path: /workspaces/pytest-ipynb2/tests/test_fixtures.py; split_id: ['test_hashable_spec']
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - creating test node for test_hashable_spec, test_case location: ('tests/test_fixtures.py', 116, 'test_hashable_spec'), absolute_test_id: /workspaces/pytest-ipynb2/tests/test_fixtures.py::test_hashable_spec
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==get_node_path called for node: <Function test_hashable_spec>==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Function test_hashable_spec>
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - ==get_node_path called for node: <Module test_fixtures.py>==
2025-03-07 07:59:06,667 - vscode_pytest - DEBUG - get_node_path found node path: /workspaces/pytest-ipynb2/tests/test_fixtures.py for node <Module test_fixtures.py>
2025-03-07 07:59:06,668 - vscode_pytest - DEBUG - file_node </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]> contains: {'name': 'notebook_2tests.ipynb[Cell4]', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>'), 'type_': 'file', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>', 'children': [{'name': 'test_adder', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>'), 'lineno': '1', 'type_': 'test', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_adder', 'runID': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_adder'}, {'name': 'test_globals', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>'), 'lineno': '1', 'type_': 'test', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_globals', 'runID': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_globals'}]}
2025-03-07 07:59:06,668 - vscode_pytest - DEBUG - ==create_folder_node called with folder_name: tests, path_iterator: </workspaces/pytest-ipynb2/tests>==
2025-03-07 07:59:06,668 - vscode_pytest - DEBUG - file_node </workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]> contains: {'name': 'notebook_2tests.ipynb[Cell6]', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>'), 'type_': 'file', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>', 'children': [{'name': 'test_another_function', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>'), 'lineno': '1', 'type_': 'test', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_another_function', 'runID': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_another_function'}, {'name': 'test_failure', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>'), 'lineno': '1', 'type_': 'test', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_failure', 'runID': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_failure'}]}
2025-03-07 07:59:06,668 - vscode_pytest - DEBUG - file_node /workspaces/pytest-ipynb2/tests/test_fixtures.py contains: {'name': 'test_fixtures.py', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'type_': 'file', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py', 'children': [{'name': 'test_path', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'type_': 'function', 'children': [{'name': '[One File]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[One File]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[One File]'}, {'name': '[Two files]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Two files]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Two files]'}, {'name': '[Copied Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Copied Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Copied Notebook]'}, {'name': '[Generated Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook]'}, {'name': '[Generated Notebook 2 cells]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook 2 cells]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook 2 cells]'}], 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path'}, {'name': 'test_filesexist', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'type_': 'function', 'children': [{'name': '[One File]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[One File]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[One File]'}, {'name': '[Two files]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Two files]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Two files]'}, {'name': '[Copied Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Copied Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Copied Notebook]'}, {'name': '[Generated Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook]'}, {'name': '[Generated Notebook 2 cells]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook 2 cells]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook 2 cells]'}], 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist'}, {'name': 'test_filecontents', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'type_': 'function', 'children': [{'name': '[One File]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[One File]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[One File]'}, {'name': '[Two files]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Two files]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Two files]'}, {'name': '[Copied Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Copied Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Copied Notebook]'}, {'name': '[Generated Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook]'}, {'name': '[Generated Notebook 2 cells]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook 2 cells]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook 2 cells]'}], 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents'}, {'name': 'test_hashable_spec', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '117', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_hashable_spec', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_hashable_spec'}]}
2025-03-07 07:59:06,668 - vscode_pytest - DEBUG - ==create_folder_node called with folder_name: tests, path_iterator: /workspaces/pytest-ipynb2/tests==
2025-03-07 07:59:06,668 - vscode_pytest - DEBUG - ==send_discovery_message called with cwd: /workspaces/pytest-ipynb2, session_node: {'name': 'pytest-ipynb2', 'path': PosixPath('/workspaces/pytest-ipynb2'), 'type_': 'folder', 'children': [{'name': 'tests', 'path': CellPath('</workspaces/pytest-ipynb2/tests>'), 'type_': 'folder', 'id_': '</workspaces/pytest-ipynb2/tests>', 'children': [{'name': 'notebook_2tests.ipynb[Cell4]', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>'), 'type_': 'file', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>', 'children': [{'name': 'test_adder', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>'), 'lineno': '1', 'type_': 'test', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_adder', 'runID': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_adder'}, {'name': 'test_globals', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>'), 'lineno': '1', 'type_': 'test', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_globals', 'runID': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_globals'}]}, {'name': 'notebook_2tests.ipynb[Cell6]', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>'), 'type_': 'file', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>', 'children': [{'name': 'test_another_function', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>'), 'lineno': '1', 'type_': 'test', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_another_function', 'runID': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_another_function'}, {'name': 'test_failure', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>'), 'lineno': '1', 'type_': 'test', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_failure', 'runID': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_failure'}]}]}, {'name': 'tests', 'path': PosixPath('/workspaces/pytest-ipynb2/tests'), 'type_': 'folder', 'id_': '/workspaces/pytest-ipynb2/tests', 'children': [{'name': 'test_fixtures.py', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'type_': 'file', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py', 'children': [{'name': 'test_path', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'type_': 'function', 'children': [{'name': '[One File]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[One File]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[One File]'}, {'name': '[Two files]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Two files]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Two files]'}, {'name': '[Copied Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Copied Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Copied Notebook]'}, {'name': '[Generated Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook]'}, {'name': '[Generated Notebook 2 cells]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook 2 cells]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook 2 cells]'}], 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path'}, {'name': 'test_filesexist', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'type_': 'function', 'children': [{'name': '[One File]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[One File]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[One File]'}, {'name': '[Two files]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Two files]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Two files]'}, {'name': '[Copied Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Copied Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Copied Notebook]'}, {'name': '[Generated Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook]'}, {'name': '[Generated Notebook 2 cells]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook 2 cells]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook 2 cells]'}], 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist'}, {'name': 'test_filecontents', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'type_': 'function', 'children': [{'name': '[One File]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[One File]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[One File]'}, {'name': '[Two files]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Two files]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Two files]'}, {'name': '[Copied Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Copied Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Copied Notebook]'}, {'name': '[Generated Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook]'}, {'name': '[Generated Notebook 2 cells]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook 2 cells]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook 2 cells]'}], 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents'}, {'name': 'test_hashable_spec', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '117', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_hashable_spec', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_hashable_spec'}]}]}], 'id_': '/workspaces/pytest-ipynb2'}==
2025-03-07 07:59:06,669 - vscode_pytest - DEBUG - ==send_message called with payload: {'cwd': '/workspaces/pytest-ipynb2', 'status': 'success', 'tests': {'name': 'pytest-ipynb2', 'path': PosixPath('/workspaces/pytest-ipynb2'), 'type_': 'folder', 'children': [{'name': 'tests', 'path': CellPath('</workspaces/pytest-ipynb2/tests>'), 'type_': 'folder', 'id_': '</workspaces/pytest-ipynb2/tests>', 'children': [{'name': 'notebook_2tests.ipynb[Cell4]', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>'), 'type_': 'file', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>', 'children': [{'name': 'test_adder', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>'), 'lineno': '1', 'type_': 'test', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_adder', 'runID': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_adder'}, {'name': 'test_globals', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>'), 'lineno': '1', 'type_': 'test', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_globals', 'runID': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell4]>::test_globals'}]}, {'name': 'notebook_2tests.ipynb[Cell6]', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>'), 'type_': 'file', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>', 'children': [{'name': 'test_another_function', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>'), 'lineno': '1', 'type_': 'test', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_another_function', 'runID': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_another_function'}, {'name': 'test_failure', 'path': CellPath('</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>'), 'lineno': '1', 'type_': 'test', 'id_': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_failure', 'runID': '</workspaces/pytest-ipynb2/tests/notebook_2tests.ipynb[Cell6]>::test_failure'}]}]}, {'name': 'tests', 'path': PosixPath('/workspaces/pytest-ipynb2/tests'), 'type_': 'folder', 'id_': '/workspaces/pytest-ipynb2/tests', 'children': [{'name': 'test_fixtures.py', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'type_': 'file', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py', 'children': [{'name': 'test_path', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'type_': 'function', 'children': [{'name': '[One File]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[One File]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[One File]'}, {'name': '[Two files]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Two files]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Two files]'}, {'name': '[Copied Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Copied Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Copied Notebook]'}, {'name': '[Generated Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook]'}, {'name': '[Generated Notebook 2 cells]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '84', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook 2 cells]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path[Generated Notebook 2 cells]'}], 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_path'}, {'name': 'test_filesexist', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'type_': 'function', 'children': [{'name': '[One File]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[One File]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[One File]'}, {'name': '[Two files]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Two files]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Two files]'}, {'name': '[Copied Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Copied Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Copied Notebook]'}, {'name': '[Generated Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook]'}, {'name': '[Generated Notebook 2 cells]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '93', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook 2 cells]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist[Generated Notebook 2 cells]'}], 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filesexist'}, {'name': 'test_filecontents', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'type_': 'function', 'children': [{'name': '[One File]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[One File]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[One File]'}, {'name': '[Two files]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Two files]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Two files]'}, {'name': '[Copied Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Copied Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Copied Notebook]'}, {'name': '[Generated Notebook]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook]'}, {'name': '[Generated Notebook 2 cells]', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '104', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook 2 cells]', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents[Generated Notebook 2 cells]'}], 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_filecontents'}, {'name': 'test_hashable_spec', 'path': PosixPath('/workspaces/pytest-ipynb2/tests/test_fixtures.py'), 'lineno': '117', 'type_': 'test', 'id_': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_hashable_spec', 'runID': '/workspaces/pytest-ipynb2/tests/test_fixtures.py::test_hashable_spec'}]}]}], 'id_': '/workspaces/pytest-ipynb2'}, 'error': []}==
