(pytest-ipynb2) pytest-ipynb2@e3c50759d05f:/workspaces/pytest-ipynb2$ UV_PROJECT_ENVIRONMENT="./.venv-3.12" uv run --python 3.12 pytest -vv --lf > pytest312.out

============================= test session starts ==============================
platform linux -- Python 3.12.8, pytest-8.3.4, pluggy-1.5.0 -- /workspaces/pytest-ipynb2/.venv-3.12/bin/python3
cachedir: .pytest_cache
rootdir: /workspaces/pytest-ipynb2
configfile: pyproject.toml
testpaths: tests, pytest_ipynb2
plugins: doctest-mkdocstrings-0.1.1, ipynb2-0.5.0, anyio-4.8.0, cov-6.0.0
collecting ... collected 3 items
run-last-failure: rerun previous 3 failures (skipped 15 files)

tests/test_execution.py::test_logreport[Verbose two notebooks] FAILED    [ 33%]
tests/test_execution.py::test_logreport[Subdirectory verbose] FAILED     [ 66%]
tests/test_execution.py::test_failures[Failing Test] FAILED              [100%]

=================================== FAILURES ===================================
____________________ test_logreport[Verbose two notebooks] _____________________

example_dir = <pytest_ipynb2._pytester_helpers.ExampleDir object at 0x7fedf5224b00>
expected_results = ExpectedResults(outcomes={'passed': 2, 'failed': 1}, logreport=[('two_cells.ipynb[Cell0]::test_pass', 'PASSED', 33), (...pass', 'PASSED', 100)], summary=[('FAILED', 'two_cells.ipynb[Cell0]::test_fails', None, 'assert 1 == 2')], failures=[])

    @parametrized
    @pytest.mark.autoskip
    def test_logreport(example_dir: ExampleDir, expected_results: ExpectedResults):
        stdout_regexes = [
            f"{LINESTART}{re.escape(filename)}{WHITESPACE}"
            f"{re.escape(outcomes)}{WHITESPACE}"
            f"{re.escape('[')}{progress:3d}%{re.escape(']')}{WHITESPACE}{LINEEND}"
            for filename, outcomes, progress in expected_results.logreport
        ]
>       example_dir.runresult.stdout.re_match_lines(stdout_regexes, consecutive=True)
E       Failed:  nomatch: '^two_cells\\.ipynb\\[Cell0\\]::test_pass\\s*PASSED\\s*\\[ 33%\\]\\s*$'
E            and: '============================= test session starts =============================='
E            and: 'platform linux -- Python 3.12.8, pytest-8.3.4, pluggy-1.5.0 -- /workspaces/pytest-ipynb2/.venv-3.12/bin/python3'
E            and: 'cachedir: .pytest_cache'
E            and: 'rootdir: /tmp/pytest-of-pytest-ipynb2/pytest-93/test_logreport0'
E            and: 'configfile: tox.ini'
E            and: 'plugins: doctest-mkdocstrings-0.1.1, ipynb2-0.5.0, anyio-4.8.0, cov-6.0.0'
E            and: 'collecting ... collected 3 items'
E            and: ''
E            and: 'two_cells.ipynb[Cell0]::test_pass <- two_cells.ipynb::Cell0 PASSED       [ 33%]'
E            and: 'two_cells.ipynb[Cell0]::test_fails <- two_cells.ipynb::Cell0 FAILED      [ 66%]'
E            and: 'two_cells.ipynb[Cell1]::test_pass <- two_cells.ipynb::Cell1 PASSED       [100%]'
E            and: ''
E            and: '=================================== FAILURES ==================================='
E            and: '______________________________ Cell0::test_fails _______________________________'
E            and: ''
E            and: '    def test_fails():'
E            and: '        x = 1'
E            and: '>       assert x == 2'
E            and: 'E       assert 1 == 2'
E            and: ''
E            and: 'two_cells.ipynb::Cell0:7: AssertionError'
E            and: '=========================== short test summary info ============================'
E            and: 'FAILED two_cells.ipynb[Cell0]::test_fails - assert 1 == 2'
E            and: '========================= 1 failed, 2 passed in 0.09s =========================='
E       remains unmatched: '^two_cells\\.ipynb\\[Cell0\\]::test_pass\\s*PASSED\\s*\\[ 33%\\]\\s*$'

/workspaces/pytest-ipynb2/tests/test_execution.py:333: Failed
----------------------------- Captured stdout call -----------------------------
============================= test session starts ==============================
platform linux -- Python 3.12.8, pytest-8.3.4, pluggy-1.5.0 -- /workspaces/pytest-ipynb2/.venv-3.12/bin/python3
cachedir: .pytest_cache
rootdir: /tmp/pytest-of-pytest-ipynb2/pytest-93/test_logreport0
configfile: tox.ini
plugins: doctest-mkdocstrings-0.1.1, ipynb2-0.5.0, anyio-4.8.0, cov-6.0.0
collecting ... collected 3 items

two_cells.ipynb[Cell0]::test_pass <- two_cells.ipynb::Cell0 PASSED       [ 33%]
two_cells.ipynb[Cell0]::test_fails <- two_cells.ipynb::Cell0 FAILED      [ 66%]
two_cells.ipynb[Cell1]::test_pass <- two_cells.ipynb::Cell1 PASSED       [100%]

=================================== FAILURES ===================================
______________________________ Cell0::test_fails _______________________________

    def test_fails():
        x = 1
>       assert x == 2
E       assert 1 == 2

two_cells.ipynb::Cell0:7: AssertionError
=========================== short test summary info ============================
FAILED two_cells.ipynb[Cell0]::test_fails - assert 1 == 2
========================= 1 failed, 2 passed in 0.09s ==========================
_____________________ test_logreport[Subdirectory verbose] _____________________

example_dir = <pytest_ipynb2._pytester_helpers.ExampleDir object at 0x7fedf4f75e50>
expected_results = ExpectedResults(outcomes={'passed': 2, 'failed': 1}, logreport=[('notebooks/two_cells.ipynb[Cell0]::test_pass', 'PASSE...SSED', 100)], summary=[('FAILED', 'notebooks/two_cells.ipynb[Cell0]::test_fails', None, 'assert 1 == 2')], failures=[])

    @parametrized
    @pytest.mark.autoskip
    def test_logreport(example_dir: ExampleDir, expected_results: ExpectedResults):
        stdout_regexes = [
            f"{LINESTART}{re.escape(filename)}{WHITESPACE}"
            f"{re.escape(outcomes)}{WHITESPACE}"
            f"{re.escape('[')}{progress:3d}%{re.escape(']')}{WHITESPACE}{LINEEND}"
            for filename, outcomes, progress in expected_results.logreport
        ]
>       example_dir.runresult.stdout.re_match_lines(stdout_regexes, consecutive=True)
E       Failed:  nomatch: '^notebooks/two_cells\\.ipynb\\[Cell0\\]::test_pass\\s*PASSED\\s*\\[ 33%\\]\\s*$'
E            and: '============================= test session starts =============================='
E            and: 'platform linux -- Python 3.12.8, pytest-8.3.4, pluggy-1.5.0 -- /workspaces/pytest-ipynb2/.venv-3.12/bin/python3'
E            and: 'cachedir: .pytest_cache'
E            and: 'rootdir: /tmp/pytest-of-pytest-ipynb2/pytest-93/test_logreport1'
E            and: 'configfile: tox.ini'
E            and: 'plugins: doctest-mkdocstrings-0.1.1, ipynb2-0.5.0, anyio-4.8.0, cov-6.0.0'
E            and: 'collecting ... collected 3 items'
E            and: ''
E            and: 'notebooks/two_cells.ipynb[Cell0]::test_pass <- notebooks/two_cells.ipynb::Cell0 PASSED [ 33%]'
E            and: 'notebooks/two_cells.ipynb[Cell0]::test_fails <- notebooks/two_cells.ipynb::Cell0 FAILED [ 66%]'
E            and: 'notebooks/two_cells.ipynb[Cell1]::test_pass <- notebooks/two_cells.ipynb::Cell1 PASSED [100%]'
E            and: ''
E            and: '=================================== FAILURES ==================================='
E            and: '______________________________ Cell0::test_fails _______________________________'
E            and: ''
E            and: '    def test_fails():'
E            and: '        x = 1'
E            and: '>       assert x == 2'
E            and: 'E       assert 1 == 2'
E            and: ''
E            and: 'notebooks/two_cells.ipynb::Cell0:7: AssertionError'
E            and: '=========================== short test summary info ============================'
E            and: 'FAILED notebooks/two_cells.ipynb[Cell0]::test_fails - assert 1 == 2'
E            and: '========================= 1 failed, 2 passed in 0.03s =========================='
E       remains unmatched: '^notebooks/two_cells\\.ipynb\\[Cell0\\]::test_pass\\s*PASSED\\s*\\[ 33%\\]\\s*$'

/workspaces/pytest-ipynb2/tests/test_execution.py:333: Failed
----------------------------- Captured stdout call -----------------------------
============================= test session starts ==============================
platform linux -- Python 3.12.8, pytest-8.3.4, pluggy-1.5.0 -- /workspaces/pytest-ipynb2/.venv-3.12/bin/python3
cachedir: .pytest_cache
rootdir: /tmp/pytest-of-pytest-ipynb2/pytest-93/test_logreport1
configfile: tox.ini
plugins: doctest-mkdocstrings-0.1.1, ipynb2-0.5.0, anyio-4.8.0, cov-6.0.0
collecting ... collected 3 items

notebooks/two_cells.ipynb[Cell0]::test_pass <- notebooks/two_cells.ipynb::Cell0 PASSED [ 33%]
notebooks/two_cells.ipynb[Cell0]::test_fails <- notebooks/two_cells.ipynb::Cell0 FAILED [ 66%]
notebooks/two_cells.ipynb[Cell1]::test_pass <- notebooks/two_cells.ipynb::Cell1 PASSED [100%]

=================================== FAILURES ===================================
______________________________ Cell0::test_fails _______________________________

    def test_fails():
        x = 1
>       assert x == 2
E       assert 1 == 2

notebooks/two_cells.ipynb::Cell0:7: AssertionError
=========================== short test summary info ============================
FAILED notebooks/two_cells.ipynb[Cell0]::test_fails - assert 1 == 2
========================= 1 failed, 2 passed in 0.03s ==========================
_________________________ test_failures[Failing Test] __________________________

example_dir = <pytest_ipynb2._pytester_helpers.ExampleDir object at 0x7fedf4ed06e0>
expected_results = ExpectedResults(outcomes={'failed': 1}, logreport=[('failing.ipynb[Cell0]', 'F', 100)], summary=[('FAILED', 'failing.i...     x = 1', '>       assert x == 2', 'E       assert 1 == 2'], location='5', exceptiontype=<class 'AssertionError'>)])

    @parametrized
    @pytest.mark.autoskip
    def test_failures(example_dir: ExampleDir, expected_results: ExpectedResults):
        results = example_dir.runresult
        regexes = ["[=]* FAILURES [=]*"]
        if expected_results.failures is not None:
            for failure in expected_results.failures:
                regexes += [
                    f"[_]* {failure.testcase} [_*]",
                    "",
                    *failure.details,
                    "",
                    f"{failure.filename}:{failure.location}: {failure.exceptiontype.__name__}",
                ]
>           results.stdout.re_match_lines(regexes, consecutive=True)
E           Failed:  nomatch: '[=]* FAILURES [=]*'
E                and: '============================= test session starts =============================='
E                and: 'platform linux -- Python 3.12.8, pytest-8.3.4, pluggy-1.5.0'
E                and: 'rootdir: /tmp/pytest-of-pytest-ipynb2/pytest-93/test_failures0'
E                and: 'plugins: doctest-mkdocstrings-0.1.1, ipynb2-0.5.0, anyio-4.8.0, cov-6.0.0'
E                and: 'collected 1 item'
E                and: ''
E                and: 'failing.ipynb[Cell0] F                                                   [100%]'
E                and: ''
E           re.match: '[=]* FAILURES [=]*'
E               with: '=================================== FAILURES ==================================='
E           re.match: '[_]* Cell0::test_fails [_*]'
E               with: '______________________________ Cell0::test_fails _______________________________'
E           exact match: ''
E           exact match: '    def test_fails():'
E           exact match: '        x = 1'
E           exact match: '>       assert x == 2'
E           exact match: 'E       assert 1 == 2'
E           exact match: ''
E           no consecutive match: 'failing.ipynb[Cell0]:5: AssertionError'
E               with: 'failing.ipynb::Cell0:5: AssertionError'

/workspaces/pytest-ipynb2/tests/test_execution.py:377: Failed
----------------------------- Captured stdout call -----------------------------
============================= test session starts ==============================
platform linux -- Python 3.12.8, pytest-8.3.4, pluggy-1.5.0
rootdir: /tmp/pytest-of-pytest-ipynb2/pytest-93/test_failures0
plugins: doctest-mkdocstrings-0.1.1, ipynb2-0.5.0, anyio-4.8.0, cov-6.0.0
collected 1 item

failing.ipynb[Cell0] F                                                   [100%]

=================================== FAILURES ===================================
______________________________ Cell0::test_fails _______________________________

    def test_fails():
        x = 1
>       assert x == 2
E       assert 1 == 2

failing.ipynb::Cell0:5: AssertionError
=========================== short test summary info ============================
FAILED failing.ipynb[Cell0]::test_fails - assert 1 == 2
============================== 1 failed in 0.02s ===============================
=========================== short test summary info ============================
FAILED tests/test_execution.py::test_logreport[Verbose two notebooks] - Failed:  nomatch: '^two_cells\\.ipynb\\[Cell0\\]::test_pass\\s*PASSED\\s*\\[ 33%\\]\\s*$'
     and: '============================= test session starts =============================='
     and: 'platform linux -- Python 3.12.8, pytest-8.3.4, pluggy-1.5.0 -- /workspaces/pytest-ipynb2/.venv-3.12/bin/python3'
     and: 'cachedir: .pytest_cache'
     and: 'rootdir: /tmp/pytest-of-pytest-ipynb2/pytest-93/test_logreport0'
     and: 'configfile: tox.ini'
     and: 'plugins: doctest-mkdocstrings-0.1.1, ipynb2-0.5.0, anyio-4.8.0, cov-6.0.0'
     and: 'collecting ... collected 3 items'
     and: ''
     and: 'two_cells.ipynb[Cell0]::test_pass <- two_cells.ipynb::Cell0 PASSED       [ 33%]'
     and: 'two_cells.ipynb[Cell0]::test_fails <- two_cells.ipynb::Cell0 FAILED      [ 66%]'
     and: 'two_cells.ipynb[Cell1]::test_pass <- two_cells.ipynb::Cell1 PASSED       [100%]'
     and: ''
     and: '=================================== FAILURES ==================================='
     and: '______________________________ Cell0::test_fails _______________________________'
     and: ''
     and: '    def test_fails():'
     and: '        x = 1'
     and: '>       assert x == 2'
     and: 'E       assert 1 == 2'
     and: ''
     and: 'two_cells.ipynb::Cell0:7: AssertionError'
     and: '=========================== short test summary info ============================'
     and: 'FAILED two_cells.ipynb[Cell0]::test_fails - assert 1 == 2'
     and: '========================= 1 failed, 2 passed in 0.09s =========================='
remains unmatched: '^two_cells\\.ipynb\\[Cell0\\]::test_pass\\s*PASSED\\s*\\[ 33%\\]\\s*$'
FAILED tests/test_execution.py::test_logreport[Subdirectory verbose] - Failed:  nomatch: '^notebooks/two_cells\\.ipynb\\[Cell0\\]::test_pass\\s*PASSED\\s*\\[ 33%\\]\\s*$'
     and: '============================= test session starts =============================='
     and: 'platform linux -- Python 3.12.8, pytest-8.3.4, pluggy-1.5.0 -- /workspaces/pytest-ipynb2/.venv-3.12/bin/python3'
     and: 'cachedir: .pytest_cache'
     and: 'rootdir: /tmp/pytest-of-pytest-ipynb2/pytest-93/test_logreport1'
     and: 'configfile: tox.ini'
     and: 'plugins: doctest-mkdocstrings-0.1.1, ipynb2-0.5.0, anyio-4.8.0, cov-6.0.0'
     and: 'collecting ... collected 3 items'
     and: ''
     and: 'notebooks/two_cells.ipynb[Cell0]::test_pass <- notebooks/two_cells.ipynb::Cell0 PASSED [ 33%]'
     and: 'notebooks/two_cells.ipynb[Cell0]::test_fails <- notebooks/two_cells.ipynb::Cell0 FAILED [ 66%]'
     and: 'notebooks/two_cells.ipynb[Cell1]::test_pass <- notebooks/two_cells.ipynb::Cell1 PASSED [100%]'
     and: ''
     and: '=================================== FAILURES ==================================='
     and: '______________________________ Cell0::test_fails _______________________________'
     and: ''
     and: '    def test_fails():'
     and: '        x = 1'
     and: '>       assert x == 2'
     and: 'E       assert 1 == 2'
     and: ''
     and: 'notebooks/two_cells.ipynb::Cell0:7: AssertionError'
     and: '=========================== short test summary info ============================'
     and: 'FAILED notebooks/two_cells.ipynb[Cell0]::test_fails - assert 1 == 2'
     and: '========================= 1 failed, 2 passed in 0.03s =========================='
remains unmatched: '^notebooks/two_cells\\.ipynb\\[Cell0\\]::test_pass\\s*PASSED\\s*\\[ 33%\\]\\s*$'
FAILED tests/test_execution.py::test_failures[Failing Test] - Failed:  nomatch: '[=]* FAILURES [=]*'
     and: '============================= test session starts =============================='
     and: 'platform linux -- Python 3.12.8, pytest-8.3.4, pluggy-1.5.0'
     and: 'rootdir: /tmp/pytest-of-pytest-ipynb2/pytest-93/test_failures0'
     and: 'plugins: doctest-mkdocstrings-0.1.1, ipynb2-0.5.0, anyio-4.8.0, cov-6.0.0'
     and: 'collected 1 item'
     and: ''
     and: 'failing.ipynb[Cell0] F                                                   [100%]'
     and: ''
re.match: '[=]* FAILURES [=]*'
    with: '=================================== FAILURES ==================================='
re.match: '[_]* Cell0::test_fails [_*]'
    with: '______________________________ Cell0::test_fails _______________________________'
exact match: ''
exact match: '    def test_fails():'
exact match: '        x = 1'
exact match: '>       assert x == 2'
exact match: 'E       assert 1 == 2'
exact match: ''
no consecutive match: 'failing.ipynb[Cell0]:5: AssertionError'
    with: 'failing.ipynb::Cell0:5: AssertionError'
============================== 3 failed in 0.59s ===============================
